<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="i3e-d3_accessories">

  <xacro:if value="$(arg use_open_manipulator)">
    <xacro:include filename="$(find i3e-d3_manipulation_description)/urdf/i3e-d3_manipulation_robot.urdf.xacro"/>
  </xacro:if>
  
  <!-- 3irobotix LIDAR -->
  <xacro:macro name="i3e-d3_lidar" params="*joint_pose">
    <link name="lidar">
      <inertial>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <mass value="0.185"/>
        <inertia ixx="1e-6" ixy="0.0" ixz="0.0" iyy="1e-6" iyz="0.0" izz="1e-6"/>
      </inertial>
      <visual>
        <origin xyz="0.0 0.0 -0.02" rpy="0.0 0.0 0.0"/>
        <geometry>
          <mesh filename="package://i3e-d3_description/meshes/lidar.stl"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0.0 0.0 -0.02" rpy="0.0 0.0 0.0"/>
        <geometry>
          <mesh filename="package://i3e-d3_description/meshes/lidar.stl"/>
        </geometry>
      </collision>
    </link>

    <joint name="lidar_joint" type="fixed">
      <parent link="base_link"/>
      <child link="lidar"/>
      <xacro:insert_block name="joint_pose"/>
    </joint>

    <gazebo reference="lidar"><material>Gazebo/Black</material></gazebo>

      <!-- Laser Plugin -->
    <gazebo reference="lidar">
      <sensor type="ray" name="lidar_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-2.35619</min_angle>
              <max_angle>2.35619</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>8.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <!-- Noise parameters based on published spec for Hokuyo laser
                  achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                  stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                  reading. -->
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
          <!--robotNamespace>$(arg robot_namespace)</robotNamespace-->
          <topicName>laser/scan</topicName>
          <frameName>lidar</frameName>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  <!-- Camera -->
  <xacro:macro name="i3e-d3_camera" params="*joint_pose">
    <link name="camera">
      <inertial>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <mass value="3.3e-3"/>
        <inertia ixx="1e-6" ixy="0.0" ixz="0.0" iyy="1e-6" iyz="0.0" izz="1e-6"/>
      </inertial>
      <visual>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <geometry>
          <box size="0.001 0.025 0.024"/>
        </geometry>
      </visual>
    </link>

    <joint name="camera_joint" type="fixed">
      <parent link="face_link"/>
      <child link="camera"/>
      <xacro:insert_block name="joint_pose"/>
    </joint>    

    <!-- Camera Plugin -->
    <gazebo reference="camera">
      <sensor type="camera" name="camera">
        <update_rate>30.0</update_rate>
        <camera name="head">
          <horizontal_fov>1.085595</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.03</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>

        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <!--robotNamespace>$(arg robot_namespace)</robotNamespace-->
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
      
  </xacro:macro>

  <!-- IMU -->
  <xacro:macro name="i3e-d3_imu" params="*joint_pose">
    <link name="imu"/>

    <joint name="imu_joint" type="fixed">
      <parent link="base_link"/>
      <child link="imu"/>
      <xacro:insert_block name="joint_pose"/>
    </joint>
      
      <!-- IMU plugin -->
      <gazebo reference="imu">
        <gravity>true</gravity>
        <sensor name="imu_sensor" type="imu">
          <always_on>true</always_on>
          <update_rate>100</update_rate>
          <visualize>true</visualize>
          <topic>__default_topic__</topic>
          <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
            <!--robotNamespace>$(arg robot_namespace)</robotNamespace-->
            <topicName>imu/data/filtered</topicName>
            <bodyName>imu</bodyName>
            <updateRateHZ>10.0</updateRateHZ>
            <gaussianNoise>0.0</gaussianNoise>
            <xyzOffset>0 0 0</xyzOffset>
            <rpyOffset>0 0 0</rpyOffset>
            <frameName>imu</frameName>
            <initialOrientationAsReference>false</initialOrientationAsReference>
          </plugin>
          <pose>0 0 0 0 0 0</pose>
        </sensor>
      </gazebo>

  </xacro:macro>

</robot>
